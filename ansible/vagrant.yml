---
- hosts: all
  vars:
    composer_path: /usr/local/bin/composer
    composer_path_dir: /usr/local/bin
    server_name: furious-foodie.vm
  tasks:
    - name: Add ppa repository for PHP
      apt_repository: repo=ppa:ondrej/php

    - name: Add ppa repository for nginx
      apt_repository: repo=ppa:nginx/development

    - name: Add source for NodeJS
      shell: 'curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -'
      args:
        warn: False

    - name: Install system packages
      apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
      with_items:
        - curl
        - wget
        - python-software-properties
        - python-selinux
        - vim
        - htop
        - git
        - imagemagick
        - build-essential
        - libnotify-bin
        - acl

    - name: Install NodeJS
      apt: pkg=nodejs state=latest

    - name: Install Gulp globally
      shell: npm install -g gulp

    - name: Install nginx
      apt: pkg=nginx state=latest

    - name: Install Postfix
      apt: pkg=postfix state=latest

    - name: Install memcached
      apt: pkg=memcached state=latest

    - name: Start the memcached service
      service: name=memcached state=started enabled=yes

    - name: Restart the Postfix service
      service: name=postfix state=restarted enabled=yes

    - name: Install PHP, modules, and tools
      apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
      with_items:
        - php7.0
        - php7.0-fpm
        - php7.0-cli
        - php7.0-memcached
        - php7.0-redis
        - php7.0-common
        - php7.0-intl
        - php7.0-curl
        - php7.0-dev
        - php7.0-gd
        - php7.0-xml
        - php7.0-json
        - php7.0-mbstring
        - php7.0-zip
        - phpunit

    - name: Restart php7.0-fpm
      become_user: 'root'
      action: service name=php7.0-fpm state=restarted enabled=yes

    - name: Install composer globally
      shell:  curl -sS https://getcomposer.org/installer | /usr/bin/php && sudo /bin/mv -f composer.phar {{ composer_path }} creates={{ composer_path }}
      args:
        warn: False

    - name: Remove the nginx example configuration files
      file:
        path: /etc/nginx/{{ item }}
        state: absent
      with_items:
        - sites-available/default
        - sites-enabled/default
        - conf.d/default.conf
        - conf.d/example_ssl.conf

    - name: Create directory for ssl
      when: create_ssl|default(True)
      become_user: 'root'
      file:
        path: /etc/nginx/ssl/
        owner: root
        group: root
        state: directory
        mode: 0775
        recurse: yes

    - name: create self-signed SSL cert
      when: create_ssl|default(True)
      become_user: 'root'
      command: openssl req -new -nodes -x509 -subj "/C=US/ST=Minnesota/L=Minneapolis/O=ST/CN={{ server_name }}" -days 3650 -keyout /etc/nginx/ssl/server.key -out /etc/nginx/ssl/server.crt -extensions v3_ca creates=/etc/nginx/ssl/server.crt

    - name: Place nginx site config
      template:
        src: nginx-vhost.j2
        dest: /etc/nginx/sites-available/{{ server_name }}

    - name: Create the links to enable site configurations
      file: path=/etc/nginx/sites-enabled/{{ server_name }} state=link src=/etc/nginx/sites-available/{{ server_name }}

    - name: Restart nginx
      become_user: 'root'
      action: service name=nginx state=restarted enabled=yes